/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/home/manujith/Data/git/TransitLanka/frontend/common_interface/src/containers/PlacesAutocompleteContainer.js';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_PlacesAutocomplete = require('../components/PlacesAutocomplete'); /* istanbul ignore next */var _PlacesAutocomplete2 = _interopRequireDefault(_PlacesAutocomplete);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_redux = require('redux');
var /* istanbul ignore next */_API = require('../actions/API'); /* istanbul ignore next */var API = _interopRequireWildcard(_API);
var /* istanbul ignore next */_search = require('../actions/search'); /* istanbul ignore next */var Actions = _interopRequireWildcard(_search);
var /* istanbul ignore next */_awesomplete = require('../libs/awesomplete.js'); /* istanbul ignore next */var _awesomplete2 = _interopRequireDefault(_awesomplete);function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

PlacesAutocompleteContainer = function (_Component) {_inherits(PlacesAutocompleteContainer, _Component);function PlacesAutocompleteContainer() {_classCallCheck(this, PlacesAutocompleteContainer);return _possibleConstructorReturn(this, (PlacesAutocompleteContainer.__proto__ || Object.getPrototypeOf(PlacesAutocompleteContainer)).apply(this, arguments));}_createClass(PlacesAutocompleteContainer, [{ key: 'componentDidMount', value: function componentDidMount()
    {
      var input = document.getElementById(this.props.id);
      window.autocomplete = [];
      if (input) {
        input.addEventListener('awesomplete-selectcomplete', function (e) {
          this.props.actions.selectLocation(e.target.value, this.props.id);
        }.bind(this));
      }
    } }, { key: 'render', value: function render()


    {
      if (document.getElementById(this.props.id)) {
        if (window.autocomplete[this.props.id] == null) {
          window.autocomplete[this.props.id] = new /* istanbul ignore next */_awesomplete2.default(document.getElementById(this.props.id),
          {
            list: this.props.locations.map(function (l) /* istanbul ignore next */{return l.node;}),
            minChars: 3 });

        } else {
          window.autocomplete[this.props.id].list = this.props.locations.map(function (l) /* istanbul ignore next */{return l.node;});
          window.autocomplete[this.props.id].evaluate();
        }
      }

      return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_PlacesAutocomplete2.default, /* istanbul ignore next */{
          label: this.props.label,
          id: this.props.id,
          placeholder: this.props.placeholder,
          onTextChange: this.props.api.apiSearchLocation,
          value: this.props.value, __source: { fileName: _jsxFileName, lineNumber: 36 }, __self: this }));


    } }]);return PlacesAutocompleteContainer;}(_react.Component);


function mapStateToProps(state) {
  return {
    locations: state.search.locations };

}
function mapDispatchToProps(dispatch) {
  return {
    api: /* istanbul ignore next */(0, _redux.bindActionCreators)(API, dispatch),
    actions: /* istanbul ignore next */(0, _redux.bindActionCreators)(Actions, dispatch) };

} /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PlacesAutocompleteContainer);